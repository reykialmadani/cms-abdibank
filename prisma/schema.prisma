generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  id           Int       @id @default(autoincrement())
  username     String    @db.VarChar(255)
  password     String    @unique @db.VarChar(70)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
  bearer_token String?   @unique @default(dbgenerated("gen_random_uuid()"))
  content      content[]
  loan         loan[]
}

model content {
  id                 Int       @id @default(autoincrement())
  sub_menu_id        Int?
  title              String    @db.VarChar(255)
  description        String?
  required_documents String?
  thumbnail          String?   @db.VarChar(255)
  status             Boolean?  @default(true)
  created_at         DateTime? @default(now()) @db.Timestamp(6)
  updated_at         DateTime? @default(now()) @db.Timestamp(6)
  updated_by         Int?
  deleted_at         DateTime? @db.Timestamp(6)
  admin              admin?    @relation(fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sub_menu           sub_menu? @relation(fields: [sub_menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  loan               loan[]
}

model loan {
  id                   Int       @id @default(autoincrement())
  content_id           Int?
  loan_type            String?   @db.VarChar(255)
  nominal              String?   @db.VarChar(255)
  annual_interest_rate Decimal?  @db.Decimal(5, 2)
  interest_type        String?   @db.VarChar(255)
  loan_term            String?   @db.VarChar(255)
  collateral           String?   @db.VarChar(255)
  cost                 String?   @db.VarChar(255)
  provisions           Decimal?  @db.Decimal(5, 2)
  created_at           DateTime? @default(now()) @db.Timestamp(6)
  updated_at           DateTime? @default(now()) @db.Timestamp(6)
  updated_by           Int?
  content              content?  @relation(fields: [content_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  admin                admin?    @relation(fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id             Int        @id @default(autoincrement())
  menu_name      String     @db.VarChar(255)
  status         Boolean?   @default(true)
  order_position Int        @default(0)
  url            String?    @db.VarChar(255)
  created_at     DateTime?  @default(now()) @db.Timestamp(6)
  updated_at     DateTime?  @default(now()) @db.Timestamp(6)
  updated_by     Int?
  sub_menu       sub_menu[]
}

model sub_menu {
  id             Int       @id @default(autoincrement())
  menu_id        Int?
  sub_menu_name  String    @db.VarChar(255)
  order_position Int       @default(0)
  url            String?   @db.VarChar(255)
  status         Boolean?  @default(true)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_by     Int?
  content        content[]
  menu           menu?     @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}